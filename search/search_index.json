{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":""},{"location":"#buckmate-is-a-file-transfer-as-code-tool-move-your-files-between-various-locations-declaratively","title":"BUCKMATE is a file transfer as code tool - move your files between various locations declaratively.","text":"Made primarily to deploy static websites to AWS S3, however it can be used to: <ul> <li>transfer files between buckets,</li> <li>transfer files between servers and buckets,</li> <li>replace content in transfered files according to yaml configuration.</li> </ul>"},{"location":"commands/","title":"Commands","text":"<p>Common flags for every command:</p> Flag Short Description Default <code>--env</code> <code>-e</code> Specifies environment specific configuration - <code>--path</code> <code>-p</code> Specifies directory that contains Deployment.yaml file -"},{"location":"commands/#apply","title":"apply","text":"<p>Applies deployment to the infrastructure.</p> <ol> <li>Copy files from source address</li> <li>Copy files from common configuration</li> <li>Copy files from environment specific configuration (if <code>--env</code> flag provided)</li> <li>Scan and replace any config map values</li> <li>Upload complete package to target address</li> </ol> Flag Short Description Default <code>--dry</code> <code>-d</code> Dry run, do not upload files. Will output location of prepared deployment. Those files won't be used in future command calls. -"},{"location":"commands/#config","title":"config","text":"<p>Applies config to local files, without downloading files from <code>source</code></p> <ol> <li>Copy files from common configuration</li> <li>Copy files from environment specific configuration (if <code>--env</code> flag provided)</li> <li>Scan and replace any config map values</li> </ol>"},{"location":"configuration/","title":"Deployment.yaml","text":""},{"location":"configuration/#sourceaddress","title":"source.address","text":"<p>Location from which files should be copied (use <code>s3://</code> prefix for s3 buckets, absolute path for files on disk, or path relative to location of this file).</p>"},{"location":"configuration/#type-string","title":"Type: <code>string</code>","text":""},{"location":"configuration/#required-true","title":"Required: <code>true</code>","text":""},{"location":"configuration/#default-none","title":"Default: <code>none</code>","text":""},{"location":"configuration/#sourceprefix","title":"source.prefix","text":"<p>Prefix to use when downloading files from bucket. Useful if your bucket holds many versions or various types of data.</p>"},{"location":"configuration/#type-string_1","title":"Type: <code>string</code>","text":""},{"location":"configuration/#required-false","title":"Required: <code>false</code>","text":""},{"location":"configuration/#default-none_1","title":"Default: <code>none</code>","text":""},{"location":"configuration/#targetaddress","title":"target.address","text":"<p>Location to which files should be copied (use <code>s3://</code> prefix for s3 buckets, absolute path for files on disk, or path relative to location of this file).</p>"},{"location":"configuration/#type-string_2","title":"Type: <code>string</code>","text":""},{"location":"configuration/#required-true_1","title":"Required: <code>true</code>","text":""},{"location":"configuration/#default-none_2","title":"Default: <code>none</code>","text":""},{"location":"configuration/#configboundary","title":"configBoundary","text":"<p>String that acts as prefix and suffix for config map values.</p>"},{"location":"configuration/#type-string_3","title":"Type: <code>string</code>","text":""},{"location":"configuration/#required-false_1","title":"Required: <code>false</code>","text":""},{"location":"configuration/#default","title":"Default: <code>%%%</code>","text":""},{"location":"configuration/#keepprevious","title":"keepPrevious","text":"<p>Whether Buckmate should clear files belonging to previous versions in the source destination.</p>"},{"location":"configuration/#type-bool","title":"Type: <code>bool</code>","text":""},{"location":"configuration/#required-false_2","title":"Required: <code>false</code>","text":""},{"location":"configuration/#default-false","title":"Default: <code>false</code>","text":""},{"location":"configuration/#configmap","title":"configMap","text":"<p>Map of keys and values used to find and replace placeholders in deployment files.</p>"},{"location":"configuration/#type-recordstring-string","title":"Type: <code>Record&lt;string, string&gt;</code>","text":""},{"location":"configuration/#required-false_3","title":"Required: <code>false</code>","text":""},{"location":"configuration/#default-none_3","title":"Default: <code>none</code>","text":""},{"location":"configuration/#fileoptions","title":"fileOptions","text":"<p>Metadata and cache-control header settings for all files. Path should be relative to the root of the source directory. For cache-control values see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9.</p>"},{"location":"configuration/#type-recordstring-metadata-recordstring-string-cachecontrol-string","title":"Type: <code>Record&lt;string, { metadata: Record&lt;string, string&gt;, cacheControl: string }&gt;</code>","text":""},{"location":"configuration/#required-false_4","title":"Required: <code>false</code>","text":""},{"location":"configuration/#default-none_4","title":"Default: <code>none</code>","text":""},{"location":"guide/","title":"Get Started","text":""},{"location":"guide/#installation","title":"Installation","text":"<p>Build from source:</p> <pre><code>git clone https://github.com/afternun/buckmate.git &amp;&amp; go build -C buckmate &amp;&amp; mv buckmate/buckmate /usr/local/bin\n</code></pre> <p>or download latest release from GitHub:</p> MacOS ARMLinux ARMWindows ARM <pre><code>curl https://github.com/afternun/buckmate/releases/latest/download/buckmate_Darwin_arm64.tar.gz -LO &amp;&amp; tar -xzvf buckmate_Darwin_arm64.tar.gz &amp;&amp; mv buckmate /usr/local/bin\n</code></pre> MacOS x86_64 <pre><code>curl https://github.com/afternun/buckmate/releases/latest/download/buckmate_Darwin_x86_64.tar.gz -LO &amp;&amp; tar -xzvf buckmate_Darwin_x86_64.tar.gz &amp;&amp; mv buckmate /usr/local/bin\n</code></pre> <pre><code>curl https://github.com/afternun/buckmate/releases/latest/download/buckmate_Linux_arm64.tar.gz -LO &amp;&amp; tar -xzvf buckmate_Linux_arm64.tar.gz &amp;&amp; mv buckmate /usr/local/bin\n</code></pre> Linux i386 <pre><code>curl https://github.com/afternun/buckmate/releases/latest/download/buckmate_Linux_i386.tar.gz -LO &amp;&amp; tar -xzvf buckmate_Linux_i386.tar.gz &amp;&amp; mv buckmate /usr/local/bin\n</code></pre> Linux x86_64 <pre><code>curl https://github.com/afternun/buckmate/releases/latest/download/buckmate_Linux_x86_64.tar.gz -LO &amp;&amp; tar -xzvf buckmate_Linux_x86_64.tar.gz &amp;&amp; mv buckmate /usr/local/bin\n</code></pre> <pre><code>curl.exe https://github.com/afternun/buckmate/releases/latest/download/buckmate_Windows_arm64.tar.gz -LO\n</code></pre> Windows i386 <pre><code>curl.exe https://github.com/afternun/buckmate/releases/latest/download/buckmate_Windows_i386.tar.gz -LO\n</code></pre> Windows x86_64 <pre><code>curl.exe https://github.com/afternun/buckmate/releases/latest/download/buckmate_Windows_x86_64.tar.gz -LO\n</code></pre> <p>Append directory containing above binary to PATH environment variable</p> <p>Browse releases here</p>"},{"location":"guide/#initial-setup","title":"Initial setup","text":"<p>Configure AWS credentials</p> <p>If you are deploying to or from AWS S3 bucket configure AWS credentials according to their instructions.</p> <p>Examples</p> <p>Take a look at <code>example</code> directory in the code repository</p> <p>In the directory create:</p> <ul> <li> <p><code>Deployment.yaml</code> - here you define common configuration for your deployment, one that is shared across any environment that you work on</p> <pre><code>source:\n  address: location from which files should be copied \n  (use `s3://` prefix for s3 buckets,\n   absolute path for files on disk,\n   or path relative to location of this file)\ntarget:\n  address: location to which files should be copied\n  (use `s3://` prefix for s3 buckets,\n   absolute path for files on disk,\n   or path relative to location of this file)\nconfigBoundary: string that acts as prefix and suffix for config map values (Default %%%)\nconfigMap:\n  string key: string value\n</code></pre> </li> </ul> <p>Config Map</p> <p>buckmate will go over files downloaded from <code>source</code> and files defined in <code>files</code> directory and look for strings that are wrapped in <code>configBoundary</code>. If such string is found, it will be replaced with corresponding value from <code>configMap</code>. </p> <p>Example: If a file would contain string <code>%%%header%%%</code> and <code>configMap</code> an entry <code>header: My Awesome Header</code>, string <code>%%%header%%%</code> would be replaced with <code>My Awesome Header</code>. </p> <p>Environment specific configuration takes precedence over common configuration</p> <ul> <li> <p>(Optional): <code>files</code> directory</p> <p>This can hold any files that will be copied alongside files downloaded from <code>source</code></p> </li> <li> <p>(Optional): directory with name of your choosing with another <code>Deployment.yaml</code> and <code>files</code> directory</p> <p>This can hold environment specific configuration. To use it, run buckmate with <code>--env</code> flag</p> </li> </ul>"},{"location":"guide/#run","title":"Run","text":"<pre><code>  buckmate apply\n</code></pre> <p>Versioning</p> <p>buckmate will add metadata to S3 objects <code>buckmate-version</code> with UUID string as value. This is used to differentiate between previous and new deployment. Files that do not match new version will be removed on the deployment.</p>"}]}